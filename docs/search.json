[
  {
    "objectID": "project3.html",
    "href": "project3.html",
    "title": "타이타닉 데이터 분석",
    "section": "",
    "text": "RMS 타이타닉은 영국의 화이트 스타 라인이 운영한 북대서양 횡단 여객선으로, 1912년 4월 10일 첫 출항하였다. 영국의 사우샘프턴을 떠나 미국의 뉴욕으로호 향하던 중에 3월 15일 빙산과 충돌하여 침몰하였으며, 이로 인해 1,514명이 사망한 것으로 알려져 있다.\n타이타닉 데이터를 분석하여 생존에 영향을 미친 요인은 무엇인지 파악하고, 예측하는 모델을 학습해보자.\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = sns.load_dataset('titanic')\ndf\n\n\n\n\n\n\n\n\nsurvived\npclass\nsex\nage\nsibsp\nparch\nfare\nembarked\nclass\nwho\nadult_male\ndeck\nembark_town\nalive\nalone\n\n\n\n\n0\n0\n3\nmale\n22.0\n1\n0\n7.2500\nS\nThird\nman\nTrue\nNaN\nSouthampton\nno\nFalse\n\n\n1\n1\n1\nfemale\n38.0\n1\n0\n71.2833\nC\nFirst\nwoman\nFalse\nC\nCherbourg\nyes\nFalse\n\n\n2\n1\n3\nfemale\n26.0\n0\n0\n7.9250\nS\nThird\nwoman\nFalse\nNaN\nSouthampton\nyes\nTrue\n\n\n3\n1\n1\nfemale\n35.0\n1\n0\n53.1000\nS\nFirst\nwoman\nFalse\nC\nSouthampton\nyes\nFalse\n\n\n4\n0\n3\nmale\n35.0\n0\n0\n8.0500\nS\nThird\nman\nTrue\nNaN\nSouthampton\nno\nTrue\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n886\n0\n2\nmale\n27.0\n0\n0\n13.0000\nS\nSecond\nman\nTrue\nNaN\nSouthampton\nno\nTrue\n\n\n887\n1\n1\nfemale\n19.0\n0\n0\n30.0000\nS\nFirst\nwoman\nFalse\nB\nSouthampton\nyes\nTrue\n\n\n888\n0\n3\nfemale\nNaN\n1\n2\n23.4500\nS\nThird\nwoman\nFalse\nNaN\nSouthampton\nno\nFalse\n\n\n889\n1\n1\nmale\n26.0\n0\n0\n30.0000\nC\nFirst\nman\nTrue\nC\nCherbourg\nyes\nTrue\n\n\n890\n0\n3\nmale\n32.0\n0\n0\n7.7500\nQ\nThird\nman\nTrue\nNaN\nQueenstown\nno\nTrue\n\n\n\n\n891 rows × 15 columns"
  },
  {
    "objectID": "project3.html#데이터-탐색-및-결측지-확인",
    "href": "project3.html#데이터-탐색-및-결측지-확인",
    "title": "타이타닉 데이터 분석",
    "section": "1. 데이터 탐색 및 결측지 확인",
    "text": "1. 데이터 탐색 및 결측지 확인\n\n# 기본 정보 확인\nprint(df.info())\nprint(df.describe())\nprint(df.head())\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 15 columns):\n #   Column       Non-Null Count  Dtype   \n---  ------       --------------  -----   \n 0   survived     891 non-null    int64   \n 1   pclass       891 non-null    int64   \n 2   sex          891 non-null    object  \n 3   age          714 non-null    float64 \n 4   sibsp        891 non-null    int64   \n 5   parch        891 non-null    int64   \n 6   fare         891 non-null    float64 \n 7   embarked     889 non-null    object  \n 8   class        891 non-null    category\n 9   who          891 non-null    object  \n 10  adult_male   891 non-null    bool    \n 11  deck         203 non-null    category\n 12  embark_town  889 non-null    object  \n 13  alive        891 non-null    object  \n 14  alone        891 non-null    bool    \ndtypes: bool(2), category(2), float64(2), int64(4), object(5)\nmemory usage: 80.7+ KB\nNone\n         survived      pclass         age       sibsp       parch        fare\ncount  891.000000  891.000000  714.000000  891.000000  891.000000  891.000000\nmean     0.383838    2.308642   29.699118    0.523008    0.381594   32.204208\nstd      0.486592    0.836071   14.526497    1.102743    0.806057   49.693429\nmin      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n25%      0.000000    2.000000   20.125000    0.000000    0.000000    7.910400\n50%      0.000000    3.000000   28.000000    0.000000    0.000000   14.454200\n75%      1.000000    3.000000   38.000000    1.000000    0.000000   31.000000\nmax      1.000000    3.000000   80.000000    8.000000    6.000000  512.329200\n   survived  pclass     sex   age  sibsp  parch     fare embarked  class  \\\n0         0       3    male  22.0      1      0   7.2500        S  Third   \n1         1       1  female  38.0      1      0  71.2833        C  First   \n2         1       3  female  26.0      0      0   7.9250        S  Third   \n3         1       1  female  35.0      1      0  53.1000        S  First   \n4         0       3    male  35.0      0      0   8.0500        S  Third   \n\n     who  adult_male deck  embark_town alive  alone  \n0    man        True  NaN  Southampton    no  False  \n1  woman       False    C    Cherbourg   yes  False  \n2  woman       False  NaN  Southampton   yes   True  \n3  woman       False    C  Southampton   yes  False  \n4    man        True  NaN  Southampton    no   True  \n\n\n\n# 결측치 확인\nprint(df.isnull().sum())\n\nsurvived         0\npclass           0\nsex              0\nage            177\nsibsp            0\nparch            0\nfare             0\nembarked         2\nclass            0\nwho              0\nadult_male       0\ndeck           688\nembark_town      2\nalive            0\nalone            0\ndtype: int64"
  },
  {
    "objectID": "project3.html#생존에-영향을-미치는-요인-분석",
    "href": "project3.html#생존에-영향을-미치는-요인-분석",
    "title": "타이타닉 데이터 분석",
    "section": "2. 생존에 영향을 미치는 요인 분석",
    "text": "2. 생존에 영향을 미치는 요인 분석\n\nsns.countplot(data=df, x='sex', hue='survived')\nplt.title('suvive count')  # 성별에 따른 생존자 수\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.histplot(data=df, x='age', hue='survived', bins=20, kde=True)\nplt.title('Age distribution and survival') \nplt.show()\n\n\n\n\n\n\n\n\n\nsns.countplot(data=df, x='pclass', hue='survived')\nplt.title('Number of survivors by cabin grade')\nplt.show()\n\n\n\n\n\n\n\n\n\ndf['family_size'] = df['sibsp'] + df['parch']\nsns.countplot(data=df, x='family_size', hue='survived')\nplt.title('the survival rate according to the number of families')\nplt.show()"
  },
  {
    "objectID": "project3.html#데이터-전처리",
    "href": "project3.html#데이터-전처리",
    "title": "타이타닉 데이터 분석",
    "section": "3. 데이터 전처리",
    "text": "3. 데이터 전처리\n\n# 필요한 열만 선택하고 결측치 처리\ndata = df[['survived', 'pclass', 'sex', 'age', 'sibsp', 'parch', 'fare', 'embarked']].copy()\n\n\n# 결측치 처리\ndata.dropna(inplace=True)\n\n\n# 범주형 변수 처리\ndata['sex'] = data['sex'].map({'male': 0, 'female': 1})\ndata['embarked'] = data['embarked'].map({'S': 0, 'C': 1, 'Q': 2})"
  },
  {
    "objectID": "project3.html#예측-모델-학습",
    "href": "project3.html#예측-모델-학습",
    "title": "타이타닉 데이터 분석",
    "section": "4. 예측 모델 학습",
    "text": "4. 예측 모델 학습\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report\n\n\n# 입력 변수(X)와 타깃(y) 설정\nX = data.drop('survived', axis=1)\ny = data['survived']\n\n\n# 학습용/검증용 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\n# 모델 학습\nmodel = LogisticRegression(max_iter=200)\nmodel.fit(X_train, y_train)\n\n\n# 예측 및 평가\ny_pred = model.predict(X_test)\nprint(\"정확도:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n\n정확도: 0.7972027972027972\n              precision    recall  f1-score   support\n\n           0       0.77      0.91      0.83        80\n           1       0.85      0.65      0.74        63\n\n    accuracy                           0.80       143\n   macro avg       0.81      0.78      0.79       143\nweighted avg       0.81      0.80      0.79       143\n\n\n\n\n&lt;결론&gt;\n\n여성의 생존자 비율의 수가 더 높다.\n나이는 어린이의 생존율이 높은 결과를 보여주었다.\n선실 등급에서 1등석 승객이 더 많이 생존하였다.\n가족 수는 혼자보다는 동행이 있는 승객의 생존율이 더 높은 것으로 나타남"
  },
  {
    "objectID": "project 1 250724.html#데이터셋",
    "href": "project 1 250724.html#데이터셋",
    "title": "project1: 캘리포니아 주택 가격 분석",
    "section": "1. 데이터셋",
    "text": "1. 데이터셋\n\n[데이터] scikit-learn에서 제공하는 캘리포니아 지역의 주택 가격의 데이터를 제공함\n킬래포니아 주택 가격의 영향을 미치는 요인이 무엇인지 파악하고, 예측하는 회귀모델을 학습시키고자 함\n1990년대 캘리포니아 지역의 주택 가격에 대한 데이터\n총 20,640개의 관측값과 8개의 독립변수(feature), 1개의 종속변수(target)으로 구성됨"
  },
  {
    "objectID": "project 1 250724.html#데이터-확인-및-전처리",
    "href": "project 1 250724.html#데이터-확인-및-전처리",
    "title": "project1: 캘리포니아 주택 가격 분석",
    "section": "2. 데이터 확인 및 전처리",
    "text": "2. 데이터 확인 및 전처리\n\n# 라이브러리 불러오기\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n#!pip install scikit-learn\n\n\n# 데이터 불러오기\nfrom sklearn.datasets import fetch_california_housing\ndata = fetch_california_housing(as_frame=True)\ndf = data.frame\ndf.head()\n\n\n\n\n\n\n\n\nMedInc\nHouseAge\nAveRooms\nAveBedrms\nPopulation\nAveOccup\nLatitude\nLongitude\nMedHouseVal\n\n\n\n\n0\n8.3252\n41.0\n6.984127\n1.023810\n322.0\n2.555556\n37.88\n-122.23\n4.526\n\n\n1\n8.3014\n21.0\n6.238137\n0.971880\n2401.0\n2.109842\n37.86\n-122.22\n3.585\n\n\n2\n7.2574\n52.0\n8.288136\n1.073446\n496.0\n2.802260\n37.85\n-122.24\n3.521\n\n\n3\n5.6431\n52.0\n5.817352\n1.073059\n558.0\n2.547945\n37.85\n-122.25\n3.413\n\n\n4\n3.8462\n52.0\n6.281853\n1.081081\n565.0\n2.181467\n37.85\n-122.25\n3.422\n\n\n\n\n\n\n\n\n# 데이터 정보\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20640 entries, 0 to 20639\nData columns (total 9 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   MedInc       20640 non-null  float64\n 1   HouseAge     20640 non-null  float64\n 2   AveRooms     20640 non-null  float64\n 3   AveBedrms    20640 non-null  float64\n 4   Population   20640 non-null  float64\n 5   AveOccup     20640 non-null  float64\n 6   Latitude     20640 non-null  float64\n 7   Longitude    20640 non-null  float64\n 8   MedHouseVal  20640 non-null  float64\ndtypes: float64(9)\nmemory usage: 1.4 MB\n\n\n\n캘리포니아 주택 가격 데이터를 확인한 결과, 관측값은 20,640개, 변수는 9개로 나타남\n특성은 다음과 같음\n\nMedInc 지역 중위 소득 (10,000 USD)\nHouseAge 주택 연식 (건축 후 경과된 연도 수)\nAveRooms 가구당 평균 방 개수\nAveBedrms 가구당 평균 침실 개수\nPopulation 지역 내 인구 수\nAveOccup 가구당 평균 거주 인원 수\nLatitude 위도\nLongitude 경도\nMedHouseVal 주택 중위 가격 (100,000 USD)\n\n\n\n# 데이터 전처리: 결측값 확인\n# 결측값은 없는 것으로 나타남\ndf.isna().sum()\n\nMedInc         0\nHouseAge       0\nAveRooms       0\nAveBedrms      0\nPopulation     0\nAveOccup       0\nLatitude       0\nLongitude      0\nMedHouseVal    0\ndtype: int64"
  },
  {
    "objectID": "project 1 250724.html#학습평가-데이터-분할",
    "href": "project 1 250724.html#학습평가-데이터-분할",
    "title": "project1: 캘리포니아 주택 가격 분석",
    "section": "3. 학습/평가 데이터 분할",
    "text": "3. 학습/평가 데이터 분할\n\n학습 데이터와 평가 데이터를 7:3 비율로 분할함\n\n\na, b = [10, 20]\nprint(a)\nprint(b)\n\n10\n20\n\n\n\n# 학습/평가 데이터 분할 (7:3 비율)\ncalifornia = fetch_california_housing\nX = data.data                       # feature\ny = data.target                     # target\n \nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n\nX_train\n\n\n\n\n\n\n\n\nMedInc\nHouseAge\nAveRooms\nAveBedrms\nPopulation\nAveOccup\nLatitude\nLongitude\n\n\n\n\n7061\n4.1312\n35.0\n5.882353\n0.975490\n1218.0\n2.985294\n33.93\n-118.02\n\n\n14689\n2.8631\n20.0\n4.401210\n1.076613\n999.0\n2.014113\n32.79\n-117.09\n\n\n17323\n4.2026\n24.0\n5.617544\n0.989474\n731.0\n2.564912\n34.59\n-120.14\n\n\n10056\n3.1094\n14.0\n5.869565\n1.094203\n302.0\n2.188406\n39.26\n-121.00\n\n\n15750\n3.3068\n52.0\n4.801205\n1.066265\n1526.0\n2.298193\n37.77\n-122.45\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n11284\n6.3700\n35.0\n6.129032\n0.926267\n658.0\n3.032258\n33.78\n-117.96\n\n\n11964\n3.0500\n33.0\n6.868597\n1.269488\n1753.0\n3.904232\n34.02\n-117.43\n\n\n5390\n2.9344\n36.0\n3.986717\n1.079696\n1756.0\n3.332068\n34.03\n-118.38\n\n\n860\n5.7192\n15.0\n6.395349\n1.067979\n1777.0\n3.178891\n37.58\n-121.96\n\n\n15795\n2.5755\n52.0\n3.402576\n1.058776\n2619.0\n2.108696\n37.77\n-122.42\n\n\n\n\n14448 rows × 8 columns\n\n\n\n\ny_test\n\n20046    0.47700\n3024     0.45800\n15663    5.00001\n20484    2.18600\n9814     2.78000\n          ...   \n17505    2.37500\n13512    0.67300\n10842    2.18400\n16559    1.19400\n5786     2.09800\nName: MedHouseVal, Length: 6192, dtype: float64\n\n\n\ndata.target\n\n0        4.526\n1        3.585\n2        3.521\n3        3.413\n4        3.422\n         ...  \n20635    0.781\n20636    0.771\n20637    0.923\n20638    0.847\n20639    0.894\nName: MedHouseVal, Length: 20640, dtype: float64"
  },
  {
    "objectID": "project 1 250724.html#데이터-탐색",
    "href": "project 1 250724.html#데이터-탐색",
    "title": "project1: 캘리포니아 주택 가격 분석",
    "section": "4. 데이터 탐색",
    "text": "4. 데이터 탐색\n\n# 요약 통계량 확인\ndf_train = pd.concat([X_train, y_train ], axis=1)\ndf_train\n\n\n\n\n\n\n\n\nMedInc\nHouseAge\nAveRooms\nAveBedrms\nPopulation\nAveOccup\nLatitude\nLongitude\nMedHouseVal\n\n\n\n\n7061\n4.1312\n35.0\n5.882353\n0.975490\n1218.0\n2.985294\n33.93\n-118.02\n1.93800\n\n\n14689\n2.8631\n20.0\n4.401210\n1.076613\n999.0\n2.014113\n32.79\n-117.09\n1.69700\n\n\n17323\n4.2026\n24.0\n5.617544\n0.989474\n731.0\n2.564912\n34.59\n-120.14\n2.59800\n\n\n10056\n3.1094\n14.0\n5.869565\n1.094203\n302.0\n2.188406\n39.26\n-121.00\n1.36100\n\n\n15750\n3.3068\n52.0\n4.801205\n1.066265\n1526.0\n2.298193\n37.77\n-122.45\n5.00001\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n11284\n6.3700\n35.0\n6.129032\n0.926267\n658.0\n3.032258\n33.78\n-117.96\n2.29200\n\n\n11964\n3.0500\n33.0\n6.868597\n1.269488\n1753.0\n3.904232\n34.02\n-117.43\n0.97800\n\n\n5390\n2.9344\n36.0\n3.986717\n1.079696\n1756.0\n3.332068\n34.03\n-118.38\n2.22100\n\n\n860\n5.7192\n15.0\n6.395349\n1.067979\n1777.0\n3.178891\n37.58\n-121.96\n2.83500\n\n\n15795\n2.5755\n52.0\n3.402576\n1.058776\n2619.0\n2.108696\n37.77\n-122.42\n3.25000\n\n\n\n\n14448 rows × 9 columns\n\n\n\n\n# 중위 주택 가겨에 대한 분포\nplt.figure(figsize=(10, 7))\nsns.histplot(df_train['MedHouseVal'], color='purple', alpha=0.5)\nplt.show()\n\n\n\n\n\n\n\n\n\n# 중위 주택 가겨에 대한 분포\nplt.figure(figsize=(7, 3))\nsns.boxplot(x='MedHouseVal', color='r', data=df_train)\nplt.show()\n\n\n\n\n\n\n\n\n\n중위 주택 가격의 평균은 20만 달러, 표준 편차는 11만 달러로 나타남\n\n중위 주택 가격의 최소값은 1만 4천 달러, 1사문분위수는 11만 9천 달러, 중앙값은 17만 9천달러, 3사분위수는 26만 달러, 최대값은 50만 달러로 분포함\n히스토그램 상자그림을 살펴보면 대부분 중위 주택 가격이 낮았으나, 히스토그램 상자그림 살펴보면 매우 높은 이상값이 많이 존재함.\n\n\n\n# 산점도\nsns.pairplot(df_train, height=0.8, plot_kws={'s': 5}, diag_kind='kde')\nplt.show()\n\n\n\n\n\n\n\n\n\n# 상관계수\ncorr_train = df_train.corr()\nupp_mat = np.triu(corr_train)\n\nplt.figure(figsize=(8, 6))\nsns.heatmap(corr_train, mask=upp_mat, vmin=-1, vmax=1, cmap='BrBG')\nplt.show()\n\n\n\n\n\n\n\n\n\n중위 주택 가격과의 상관관계를 살펴보면 지역 중위 소득과 강한 양의 상관관계가 존재함\n또한 주택 연식, 가구당 평균 방 개수, 위도(Latitude)간에도 약한 양의 상관관계가 있음\n따라서 중위 주택 가격을 예측하는 특성(Feature)으로 해당 변수를 선택함"
  },
  {
    "objectID": "project 1 250724.html#회귀-모델-학습",
    "href": "project 1 250724.html#회귀-모델-학습",
    "title": "project1: 캘리포니아 주택 가격 분석",
    "section": "5. 회귀 모델 학습",
    "text": "5. 회귀 모델 학습\n\n# 상관관계가 존재하는 특성(feature) 선택\nfeatures = ['MedInc', 'HouseAge', 'AveRooms', 'Latitude']\ntarget = 'MedHouseVal'\n\nX_train = df_train[features]   # 2차원 배열\n\n\n# 선형 회귀모델 생성 및 활용\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# 회귀계수 (regressin coefficient)\npd.DataFrame({'Features' : features, 'coefficient' : model.coef_})\n\n\n\n\n\n\n\n\nFeatures\ncoefficient\n\n\n\n\n0\nMedInc\n0.435658\n\n\n1\nHouseAge\n0.016937\n\n\n2\nAveRooms\n-0.019505\n\n\n3\nLatitude\n-0.045071\n\n\n\n\n\n\n\n\n특성이 중위 주택 가격에 미치는 영향은 다음과 같음\n\n회귀계수를 살펴보면 지역 중위 소득이 1만 달러 증가하면 중위 주택 가격은 약 4만 3천 달러 주택 연식이 1년 증가하면 증가한 것으로 나타남. 이는 경제적으로 여유가 있을수록 좋은 집에 거주한다는 경향이 있음을 보임\n주택 연식이 1년 증가하면 중위 주택 가격은 1693달러 증가하는 것으로 나타남\n가구당 평균 방 개수가 1개 증가하면 중위 주택 가격은 1950달러 감소함\n위도가 1도 증가하면 45007달러 감소하는 경향이 있음. 이는 일반적으로 캘리포니아주는 남부 지역이 상재적으로 대도시가 많아 주택 가격이 더 높은 것을 반영하는 것으로 판단됨"
  },
  {
    "objectID": "project 1 250724.html#회귀모델-평가",
    "href": "project 1 250724.html#회귀모델-평가",
    "title": "project1: 캘리포니아 주택 가격 분석",
    "section": "6. 회귀모델 평가",
    "text": "6. 회귀모델 평가\n\n# 평가 데이터에서도 학습 데이터에서 사용한 독립변수만 선택\nX_test = X_test[features]\n\n# 회귀모델 평가: RMSE, 결정계수\n# 학습데이터로 학습한 회귀모델에 평가데이터를 입력해서 예측값 계산\ny_pred = model.predict(X_test)\n\n# 평가 데이터의 실제 관측값과 예측값을 이용하여 모델을 평가\nfrom sklearn.metrics import mean_squared_error, r2_score\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\n\nR2 = r2_score(y_test, y_pred)\n\nprint(f'RMSE : {RMSE:.3f}')\nprint(f'결정계수 : {R2:.3f}')\n\nRMSE : 0.794\n결정계수 : 0.520\n\n\n\nRMSE는 0.794으로, 주택 중위 가격의 실제값과 예측값이 평균적으로 약 6만 달러 차이가 있다는 것을 의미함\n학습 데이터에서 주택 중위 가격의 평균은 약 20만 달러인 점을 고려하면, 모델의 평균 오차는 약 30% 수준임을 알 수 있음\n따라서 평균 오차가 비교적 큰 편이므로, 모델 성능 개선이 필요한 것으로 판단됨\n결정계수는 52.0%로 나타남."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "창의융합정보과제연구 2025 유은지",
    "section": "",
    "text": "This is a Quarto website."
  },
  {
    "objectID": "project2.html",
    "href": "project2.html",
    "title": "project2: 붓꽃 분류",
    "section": "",
    "text": "seaborn에서는 붓꽃에 대한 데이터를 제공함\n붓꽃의 품종에 영향을 미치는 요인은 무엇이지 파악하고, 모델 학습을 통해 품종을 예측하고자 함"
  },
  {
    "objectID": "project2.html#데이터셋",
    "href": "project2.html#데이터셋",
    "title": "project2: 붓꽃 분류",
    "section": "",
    "text": "seaborn에서는 붓꽃에 대한 데이터를 제공함\n붓꽃의 품종에 영향을 미치는 요인은 무엇이지 파악하고, 모델 학습을 통해 품종을 예측하고자 함"
  },
  {
    "objectID": "project2.html#데이터-확인-및-전처리",
    "href": "project2.html#데이터-확인-및-전처리",
    "title": "project2: 붓꽃 분류",
    "section": "2. 데이터 확인 및 전처리",
    "text": "2. 데이터 확인 및 전처리\n\n# 라이브러리 불러오기\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# 데이터 불러오기\ndf = sns.load_dataset('iris')\ndf.head()\n\n\n\n\n\n\n\n\nsepal_length\nsepal_width\npetal_length\npetal_width\nspecies\n\n\n\n\n0\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n1\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n2\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n3\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n4\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n\n\n\n\n\n\n# 데이터 확인\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 150 entries, 0 to 149\nData columns (total 5 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   sepal_length  150 non-null    float64\n 1   sepal_width   150 non-null    float64\n 2   petal_length  150 non-null    float64\n 3   petal_width   150 non-null    float64\n 4   species       150 non-null    object \ndtypes: float64(4), object(1)\nmemory usage: 6.0+ KB\n\n\n\n# 데이터 전처리 : 결측값 확인\n# 영화 장르를 특성(feature)으로 사용할 예정이므로,\n# director, cast 변수에 존재하는 결측값은 별도로 처리하지 않음\ndf.isna().sum()\n\nsepal_length    0\nsepal_width     0\npetal_length    0\npetal_width     0\nspecies         0\ndtype: int64"
  },
  {
    "objectID": "project2.html#학습평가-데이터-분할",
    "href": "project2.html#학습평가-데이터-분할",
    "title": "project2: 붓꽃 분류",
    "section": "3. 학습/평가 데이터 분할",
    "text": "3. 학습/평가 데이터 분할\n\n학습 데이터의 평가 데이터를 8:2비율로 분할함\n\n\n# 학습/평가 데이터 분할 (8:2 비율)\nX = df.drop(columns='species')                    # feature\ny = df['species']                                 # target\n \nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
  },
  {
    "objectID": "project2.html#데이터-탐색",
    "href": "project2.html#데이터-탐색",
    "title": "project2: 붓꽃 분류",
    "section": "4. 데이터 탐색",
    "text": "4. 데이터 탐색\n\n# 요약 통계량 확인\ndf_train = pd.concat([X_train, y_train], axis=1)\ndf_train.describe()\n\n\n\n\n\n\n\n\nsepal_length\nsepal_width\npetal_length\npetal_width\n\n\n\n\ncount\n105.000000\n105.000000\n105.000000\n105.000000\n\n\nmean\n5.842857\n3.009524\n3.870476\n1.239048\n\n\nstd\n0.833304\n0.418910\n1.721355\n0.742720\n\n\nmin\n4.300000\n2.000000\n1.100000\n0.100000\n\n\n25%\n5.100000\n2.800000\n1.700000\n0.400000\n\n\n50%\n5.800000\n3.000000\n4.300000\n1.300000\n\n\n75%\n6.400000\n3.300000\n5.100000\n1.800000\n\n\nmax\n7.700000\n4.200000\n6.700000\n2.500000\n\n\n\n\n\n\n\n\n# 상자 수염 그래프\ndf_train = pd.concat([X_train, y_train], axis=1)\n\nplt.figure(figsize=(8, 6))\nfor i, feature in enumerate(X_train.columns) : \n    plt.subplot(2, 2, i+1)\n    sns.boxplot(y='species', x=feature, hue='species', data=df_train)\n    plt.ylabel('')\nplt.show()\n\n\n\n\n\n\n\n\n\n# 산점도\nplt.figure(figsize=(6, 4))\nsns.pairplot(X_train)\nplt.show()\n\n&lt;Figure size 432x288 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\n\n# 산점도\nsns.pairplot(df_train, hue='species', height=2)\nplt.show()"
  },
  {
    "objectID": "project2.html#분류모델-학습-및-평가",
    "href": "project2.html#분류모델-학습-및-평가",
    "title": "project2: 붓꽃 분류",
    "section": "5. 분류모델 학습 및 평가",
    "text": "5. 분류모델 학습 및 평가\n\n# 최적의 k값 확인\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\nk_range = range(1, 21, 2)\nk_scores = []\n\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    scores = cross_val_score(knn, X_train, y_train, cv=5, scoring='accuracy')\n    k_scores.append(scores.mean())\n    print(f'k={k}일 때 정확도 : {scores.mean():.3f}')\n\nk=1일 때 정확도 : 0.952\nk=3일 때 정확도 : 0.933\nk=5일 때 정확도 : 0.943\nk=7일 때 정확도 : 0.952\nk=9일 때 정확도 : 0.943\nk=11일 때 정확도 : 0.933\nk=13일 때 정확도 : 0.943\nk=15일 때 정확도 : 0.933\nk=17일 때 정확도 : 0.933\nk=19일 때 정확도 : 0.943\n\n\n\n# 모델 성능이 가장 좋은 k 값 선택\nbest_k = k_range[k_scores.index(max(k_scores))]\nprint(f\"최적의 k 값은 {best_k}이며, 평균 정확도는 {max(k_scores):.3f}\")\n\n최적의 k 값은 1이며, 평균 정확도는 0.952\n\n\n\n# K-NN 분류모델 생성 및 학습\nknn = KNeighborsClassifier(n_neighbors=best_k)\nknn.fit(X_train, y_train)\n\n# 학습 데이터로 학습한 분류모델에 평가 데이터를 입력하여 클래스 분류\ny_pred = knn.predict(X_test)\n\n# 분류모델 평가: 정확도, 정밀도, 제한도\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score\naccuracy = accuracy_score(y_test, y_pred)\nprecision = precision_score(y_test, y_pred, average='micro')\nrecall = recall_score(y_test, y_pred, average='micro')\n                            \nprint(f'정확도 : {accuracy:.3f}')\nprint(f'정밀도 : {accuracy:.3f}')\nprint(f'재현도 : {accuracy:.3f}')\n\n정확도 : 1.000\n정밀도 : 1.000\n재현도 : 1.000"
  }
]